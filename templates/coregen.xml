<?xml version="1.0" encoding="UTF-8"?>
<RootFolder label="COREGEN" treetype="folder" language="COREGEN">
	<Folder label="VERILOG Component Instantiation" treetype="folder">
		<Template label="mult32" treetype="template">
 
 
// The following must be inserted into your Verilog file for this
// core to be instantiated. Change the instance name and port connections
// (in parentheses) to your own signal names.
 
mult32 YourInstanceName (
    .clk(clk),
    .a(a), // Bus [31 : 0] 
    .b(b), // Bus [31 : 0] 
    .p(p)); // Bus [31 : 0] 

 
		</Template>
		<Template label="mem" treetype="template">
 
 
// The following must be inserted into your Verilog file for this
// core to be instantiated. Change the instance name and port connections
// (in parentheses) to your own signal names.
 
mem YourInstanceName (
    .clka(clka),
    .dina(dina), // Bus [15 : 0] 
    .addra(addra), // Bus [3 : 0] 
    .wea(wea), // Bus [0 : 0] 
    .douta(douta)); // Bus [15 : 0] 

 
		</Template>
		<Template label="RomTest" treetype="template">
		</Template>
		<Template label="sprite_mem" treetype="template">
		</Template>
		<Template label="font_ram2" treetype="template">
 
 
// The following must be inserted into your Verilog file for this
// core to be instantiated. Change the instance name and port connections
// (in parentheses) to your own signal names.
 
font_ram2 YourInstanceName (
    .clka(clka),
    .dina(dina), // Bus [10 : 0] 
    .addra(addra), // Bus [1 : 0] 
    .wea(wea), // Bus [0 : 0] 
    .douta(douta)); // Bus [10 : 0] 

 
		</Template>
	</Folder>
	<Folder label="VHDL Component Instantiation" treetype="folder">
		<Template label="mult32" treetype="template">
 
 
-- The following code must appear in the VHDL architecture header:
 
component mult32
    port (
    clk: IN std_logic;
    a: IN std_logic_VECTOR(31 downto 0);
    b: IN std_logic_VECTOR(31 downto 0);
    p: OUT std_logic_VECTOR(31 downto 0));
end component;


 
-------------------------------------------------------------
 
-- The following code must appear in the VHDL architecture body.
-- Substitute your own instance name and net names.
 
your_instance_name : mult32
        port map (
            clk =&gt; clk,
            a =&gt; a,
            b =&gt; b,
            p =&gt; p);
 
		</Template>
		<Template label="mem" treetype="template">
 
 
-- The following code must appear in the VHDL architecture header:
 
component mem
    port (
    clka: IN std_logic;
    dina: IN std_logic_VECTOR(15 downto 0);
    addra: IN std_logic_VECTOR(3 downto 0);
    wea: IN std_logic_VECTOR(0 downto 0);
    douta: OUT std_logic_VECTOR(15 downto 0));
end component;


 
-------------------------------------------------------------
 
-- The following code must appear in the VHDL architecture body.
-- Substitute your own instance name and net names.
 
your_instance_name : mem
        port map (
            clka =&gt; clka,
            dina =&gt; dina,
            addra =&gt; addra,
            wea =&gt; wea,
            douta =&gt; douta);
 
		</Template>
		<Template label="RomTest" treetype="template">
		</Template>
		<Template label="sprite_mem" treetype="template">
		</Template>
		<Template label="font_ram2" treetype="template">
 
 
-- The following code must appear in the VHDL architecture header:
 
component font_ram2
    port (
    clka: IN std_logic;
    dina: IN std_logic_VECTOR(10 downto 0);
    addra: IN std_logic_VECTOR(1 downto 0);
    wea: IN std_logic_VECTOR(0 downto 0);
    douta: OUT std_logic_VECTOR(10 downto 0));
end component;


 
-------------------------------------------------------------
 
-- The following code must appear in the VHDL architecture body.
-- Substitute your own instance name and net names.
 
your_instance_name : font_ram2
        port map (
            clka =&gt; clka,
            dina =&gt; dina,
            addra =&gt; addra,
            wea =&gt; wea,
            douta =&gt; douta);
 
		</Template>
	</Folder>
</RootFolder>
